{"version":3,"sources":["utils/API.js","components/Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["getRandomUsers","axios","get","Container","state","search","employees","filteredEmployees","sortDirections","initialSortDirections","handleInputChange","event","value","target","setState","filterEmployees","toLowerCase","trim","handleFormSubmit","preventDefault","sortyBy","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","localeCompary","input","filter","employee","name","first","concat","last","includes","phone","replace","email","formatDate","dob","date","Date","push","getMonth","slice","getDate","getFullYear","join","API","getRandomEmployees","then","res","data","results","catch","err","console","log","this","className","sortBy","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2af72b6d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    getRandomUsers: function() {\n        return axios.get('https://randomuser.me/api/?results=40&nat=us&seed=abc');\n    }\n};","import React, { Component } from \"react\";\nimport Search from \"../Search/index\";\nimport Table from \"../Table/index\";\nimport API from \"../../utils/API\";\n\nclass Container extends Component {\n    state = {\n        search: \"\",\n        employees: [],\n        filteredEmployees: [],\n        sortDirections: this.initialSortDirections,\n    };\n\n    get initialSortDirections() {\n        return {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            dob: \"\",\n        };\n    };\n\n    componentDidMount() {\n        API.getRandomEmployees()\n        .then((res) => \n            this.setState({\n            employees: res.data.results,\n            filteredEmployees: res.data.results,\n            })\n        )\n        .catch((err) => console.log(err));\n    }\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        this.setState({ search: value });\n        this.filterEmployees(value.toLowerCase().trim());\n    };\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n    };\n\n    sortyBy = (key, primary = 0, secondary = 0) => {\n        let sortedEmployees = this.state.filteredEmployees;\n        if (this.state.sortDirections[key]) {\n            this.setState({\n                filteredEmployees: sortedEmployees.reverse(),\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n                },\n            });\n\n        } else {\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => {\n                a = a[key];\n                b = b[key];\n\n                if (primary) {\n                    if (secondary && a[primary] === b[primary]) {\n                        return a[secondary].localeCompare(b[secondary]);\n                    }\n\n                    return a[primary].localeCompary(b[primary]);\n                } else {\n                    return a.localeCompare(b);\n                }\n            });\n\n            this.setState({\n                filteredEmployees: sortedEmployees,\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: \"asc\",\n                },\n            });\n        }\n    };\n\n    filterEmployees = (input) => {\n        if (input) {\n            this.setState({\n                filteredEmployees: this.state.employees.filter((employee) => {\n                    return (\n                        employee.name.first\n                        .toLowerCase()\n                        .concat(\" \", employee.name.last.toLowerCase())\n                        .includes(input) ||\n                    employee.phone.includes(input) ||\n                    employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\n                    employee.email.includes(input) ||\n                    this.formatDate(employee.dob.date).includes(input)\n                    );\n                }),\n            });\n        } else {\n            this.setState({ filteredEmployees: this.state.employees });\n        }\n    };\n\n    formatDate = (date) => {\n        date = new Date(date);\n        let dob = [];\n        dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n        dob.push((\"0\" + date.getDate()).slice(-2));\n        dob.push(date.getFullYear());\n\n        //Joins properly formatted date\n        return dob.join(\"-\");\n    };\n\n    render() {\n        return (\n            <>\n            <Search\n            value={this.state.search}\n            handleInputChange={this.handleInputChange}\n            handleFormSubmit={this.handleFormSubmit}\n            />\n\n            <div className=\"container mt-4\">\n                <Table\n                state={this.state}\n                sortBy={this.sortBy}\n                filteredEmployees={this.filterEmployees}\n                formatDate={this.formatDate}\n                />\n            </div>\n            </>\n        );\n    }\n\n}\n\nexport default Container;","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"../src/components/Header/index\";\nimport Container from \"../src/components/Container/index\";\n\nconst App = () => {\n  return (\n    <>\n    <Header />\n    <Container />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}