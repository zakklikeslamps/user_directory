{"version":3,"sources":["components/Header/index.js","components/Search/index.js","components/Table/index.js","utils/API.js","components/Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Search","props","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","Table","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","exportObject","getRandomUsers","axios","get","Container","search","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","sortyBy","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","localeCompary","input","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","API","getRandomEmployees","then","res","data","results","catch","err","console","log","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8a343eb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n    return (\n        <header>\n            <h1 className=\"text-center\">Employee Directory</h1>\n            <p className=\"text-center\">\n                #Click on the columns below to filter or use search for precise results.#\n            </p>\n        </header>\n    );\n    \n};\n\nexport default Header;","import React from \"react\";\n\nconst Search = (props) => {\n\n    return (\n        <nav className=\"navbar justify-content-center\">\n            <form className=\"form-inline m-2\" onSubmit={props.handleFormSubmit}>\n                <input\n                className=\"form-control\"\n                value={props.value}\n                name=\"search\"\n                onChange={props.handleInputChange}\n                type=\"search\"\n                placeholder=\"Search Here\"\n                />\n            </form>\n        </nav>\n    );\n};\n\nexport default Search;","import React from \"react\";\n\nconst Table = (props) => {\n    return(\n        <table className=\"table table-striped table-sortable text-center\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Image</th>\n                    <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\n                        <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>Name</span>\n                    </th>\n\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\n                    </th>\n\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"email\")}>Email</span>\n                    </th>\n\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"dob\", \"date\")}>DoB</span>\n                    </th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {props.state.filteredEmployees.map((employee) => {\n                    const { first, last } = employee.name;\n                    const fullName = `${first} ${last}`;\n\n                    const dob = props.formatDate(employee.dob.date);\n\n                    return (\n                        <tr key={employee.login.uuid}>\n                            <td>\n                                <img src={employee.picture.thumbnail} alt={fullName} />\n                            </td>\n\n                            <td className=\"align-middle\">{fullName}</td>\n\n                            <td className=\"align-middle\">\n                                <a href={`tel:+1${employee.phone}`}>{employee.phone}</a>\n                            </td>\n\n                            <td className=\"align-middle email\">\n                                <a href={`mailto:${employee.email}`}>{employee.email}</a>\n                            </td>\n                            \n                            <td className=\"align-middle\">{dob}</td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </table>\n\n    );\n};\n\nexport default Table;","import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?results=25&nat=fr&seed=foobar&exc=login,registered\";\n\n//eslint-disable-next-line import/no-anonymous-default-export \n//Ask Steve G if he found solution\n\nconst exportObject = {\n    getRandomUsers: function() {\n        return axios.get(BASEURL);\n    },\n};\n\nexport default exportObject;","import React, { Component } from \"react\";\nimport Search from \"../Search/index\";\nimport Table from \"../Table/index\";\nimport API from \"../../utils/API\";\n\nclass Container extends Component {\n    state = {\n        search: \"\",\n        employees: [],\n        filteredEmployees: [],\n        sortDirections: this.initialSortDirections,\n    };\n\n    get initialSortDirections() {\n        return {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            dob: \"\",\n        };\n    };\n\n    componentDidMount() {\n        API.getRandomEmployees()\n        .then((res) => \n            this.setState({\n            employees: res.data.results,\n            filteredEmployees: res.data.results,\n            })\n        )\n        .catch((err) => console.log(err));\n    }\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        this.setState({ search: value });\n        this.filterEmployees(value.toLowerCase().trim());\n    };\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n    };\n\n    sortyBy = (key, primary = 0, secondary = 0) => {\n        let sortedEmployees = this.state.filteredEmployees;\n        if (this.state.sortDirections[key]) {\n            this.setState({\n                filteredEmployees: sortedEmployees.reverse(),\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n                },\n            });\n\n        } else {\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => {\n                a = a[key];\n                b = b[key];\n\n                if (primary) {\n                    if (secondary && a[primary] === b[primary]) {\n                        return a[secondary].localeCompare(b[secondary]);\n                    }\n\n                    return a[primary].localeCompary(b[primary]);\n                } else {\n                    return a.localeCompare(b);\n                }\n            });\n\n            this.setState({\n                filteredEmployees: sortedEmployees,\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: \"asc\",\n                },\n            });\n        }\n    };\n\n    filterEmployees = (input) => {\n        if (input) {\n            this.setState({\n                filteredEmployees: this.state.employees.filter((employee) => {\n                    return (\n                        employee.name.first\n                        .toLowerCase()\n                        .concat(\" \", employee.name.last.toLowerCase())\n                        .includes(input) ||\n                    employee.phone.includes(input) ||\n                    employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\n                    employee.email.includes(input) ||\n                    this.formatDate(employee.dob.date).includes(input)\n                    );\n                }),\n            });\n        } else {\n            this.setState({ filteredEmployees: this.state.employees });\n        }\n    };\n\n    formatDate = (date) => {\n        date = new Date(date);\n        let dob = [];\n        dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n        dob.push((\"0\" + date.getDate()).slice(-2));\n        dob.push(date.getFullYear());\n\n        //Joins properly formatted date\n        return dob.join(\"-\");\n    };\n\n    render() {\n        return (\n            <>\n            <Search\n            value={this.state.search}\n            handleInputChange={this.handleInputChange}\n            handleFormSubmit={this.handleFormSubmit}\n            />\n\n            <div className=\"container mt-4\">\n                <Table\n                state={this.state}\n                sortBy={this.sortBy}\n                filteredEmployees={this.filterEmployees}\n                formatDate={this.formatDate}\n                />\n            </div>\n            </>\n        );\n    }\n\n}\n\nexport default Container;","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"../src/components/Header/index\";\nimport Container from \"../src/components/Container/index\";\n\nconst App = () => {\n  return (\n    <>\n    <Header />\n    <Container />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  \n    <App />, document.getElementById('root')\n    \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}